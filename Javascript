const board = document.getElementById('board');
const cells = document.querySelectorAll('[data-cell]');
const popup = document.getElementById('popup');
const winnerMessage = document.getElementById('winnerMessage');
const restartButton = document.getElementById('restartButton');
const loadingScreen = document.getElementById('loadingScreen');
const gameContainer = document.getElementById('gameContainer');

let isCircleTurn;

const winningCombinations = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8],
  [0, 4, 8],
  [2, 4, 6],
];

function startGame() {
  isCircleTurn = false; // 'X' goes first
  cells.forEach(cell => {
    cell.classList.remove('circle');
    cell.classList.remove('x');
    cell.removeEventListener('click', handleClick);
    cell.addEventListener('click', handleClick, { once: true });
  });
  popup.classList.add('hidden');
}

function handleClick(e) {
  const cell = e.target;
  const currentClass = isCircleTurn ? 'circle' : 'x';
  cell.classList.add(currentClass);

  if (checkWin(currentClass)) {
    endGame(false);
  } else if (isDraw()) {
    endGame(true);
  } else {
    swapTurns();
  }
}

function endGame(draw) {
  if (draw) {
    winnerMessage.textContent = 'Draw!';
  } else {
    winnerMessage.textContent = `${isCircleTurn ? "O's" : "X's"} Wins!`;
  }
  popup.classList.remove('hidden');
}

function isDraw() {
  return [...cells].every(cell => {
    return cell.classList.contains('x') || cell.classList.contains('circle');
  });
}

function swapTurns() {
  isCircleTurn = !isCircleTurn;
}

function checkWin(currentClass) {
  return winningCombinations.some(combination => {
    return combination.every(index => {
      return cells[index].classList.contains(currentClass);
    });
  });
}

restartButton.addEventListener('click', startGame);

window.addEventListener('load', () => {
  setTimeout(() => {
    loadingScreen.classList.add('hidden');
    gameContainer.classList.remove('hidden');
    startGame();
  }, 3000); // Show the loading screen for 3 seconds
});

startGame();
